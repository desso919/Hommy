package com.hommy.administrator.service;

import java.io.IOException;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hommy.administrator.dao.impl.RulesOperation;
import com.hommy.administrator.dao.objects.Event;
import com.hommy.administrator.dao.objects.Rule;
import com.hommy.administrator.dao.objects.Rules;

@Path("/rules")
public class RulesService {

	@GET
	@Produces(MediaType.APPLICATION_JSON)
	public Response getRulesNameForUser(@QueryParam("userId") int userId) throws JsonProcessingException {
		Rules rules = new RulesOperation().getRulesNameForUser(userId);

		String allRules = rules.toJSON();

		return Response.status(200).entity(allRules).build();
	}

	@Path("/add")
	@POST
	@Consumes(MediaType.APPLICATION_JSON)
	@Produces(MediaType.APPLICATION_JSON)
	public Response addRule(final Rule rule) throws JsonParseException, JsonMappingException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		boolean isAddedSuccessfully = false;

		if (rule != null) {
			Event newEvent = mapper.readValue(rule, Rule.class);
			isAddedSuccessfully = new RulesOperation().addRules(rule);
		}

		if (isAddedSuccessfully) {
			return Response.status(200).entity(new OperationResult(Result.OK).toJSON()).build();
		} else {
			return Response.status(200).entity(new OperationResult(Result.FAILED).toJSON()).build();
		}
	}
}
