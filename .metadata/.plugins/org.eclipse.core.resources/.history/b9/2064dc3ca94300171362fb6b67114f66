package com.hommy.service.topics;

import java.util.ArrayList;
import java.util.List;

import com.hommy.service.interfaces.IDeviceSubscriber;
import com.hommy.service.interfaces.ITopic;

public abstract class Topic implements ITopic {

	private List<IDeviceSubscriber> subscribers = new ArrayList<IDeviceSubscriber>();
	protected final Object MUTEX = new Object();
	private String message;
	private boolean isChanged;

	public List<IDeviceSubscriber> getSubscribers() {
		return subscribers;
	}

	public String getMessage() {
		return message;
	}

	public boolean isChanged() {
		return isChanged;
	}

	@Override
	public boolean register(IDeviceSubscriber device) {
		if (device != null) {
			synchronized (MUTEX) {
				if (!subscribers.contains(device))
					return subscribers.add(device);
			}
		}
		return false;
	}

	@Override
	public boolean unregister(IDeviceSubscriber device) {
		if (device != null) {
			synchronized (MUTEX) {
				observers.remove(obj);
			}
		}

	}

	@Override
	public void notifySubscribers() {
		// TODO Auto-generated method stub

	}

	@Override
	public Object getUpdate(IDeviceSubscriber device) {
		// TODO Auto-generated method stub
		return null;
	}

}
