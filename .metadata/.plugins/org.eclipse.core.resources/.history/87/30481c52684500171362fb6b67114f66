package com.hommy.service;

import java.io.IOException;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Enumeration;

public class ObserverPatternTest {

	public static void main(String[] args) throws UnknownHostException, IOException {
		// // create subject
		// ITopic tempTopic = TemperatureTopic.getInstance();
		// ITopic timeTopic = TimeTopic.getInstance();
		//
		// // create observers
		// IDeviceSubscriber airConditioner = new AirConditioner("Air
		// Conditioner");
		// IDeviceSubscriber tv = new TV("TV");
		// IDeviceSubscriber alarmClock = new AlarmClock("Alarm Clock");
		//
		// // register observers to the subject
		// tempTopic.register(airConditioner);
		//
		// timeTopic.register(tv);
		// timeTopic.register(alarmClock);
		//
		// // attach observer to subject
		// airConditioner.setTopic(tempTopic);
		// alarmClock.setTopic(timeTopic);
		// tv.setTopic(timeTopic);
		//
		// // now send message to subject
		// tempTopic.publishMessage("Temperature changed to: 24C");
		// timeTopic.publishMessage("Time now is 11:00 AM");

		checkHosts("192.168.0");
		test();
	}

	public static void checkHosts(String subnet) throws UnknownHostException, IOException {
		int timeout = 0;
		for (int i = 1; i < 255; i++) {
			String host = subnet + "." + i;
			System.out.println("Full IP: " + host);
			InetAddress[] ip = InetAddress.getAllByName(host);
			
			// if (ip.isReachable(timeout)) {
			// System.out.println(ip + " is reachable");
			// } else {
			// System.out.println(ip + " is not reachable");
			// }

		}
	}

	public static void test() {
		try {
			Enumeration nis = NetworkInterface.getNetworkInterfaces();
			while (nis.hasMoreElements()) {
				NetworkInterface ni = (NetworkInterface) nis.nextElement();
				Enumeration ias = ni.getInetAddresses();
				while (ias.hasMoreElements()) {
					InetAddress ia = (InetAddress) ias.nextElement();
					System.out.println(ia.getHostAddress());
				}

			}
		} catch (SocketException ex) {

		}
	}
}
