package com.hommy.service.subscribers;

import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketTimeoutException;

public class Laptop extends DeviceSubscriber {

	private static ServerSocket serverSocket;
	private static Socket server;

	public static void main(String[] args) {

	}

	static {
		try {
			serverSocket = new ServerSocket(6066);
			serverSocket.setSoTimeout(0);
			connectToLaptop();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	public Laptop() {
		super("Laptop");
	}

	@Override
	public void update() {
		String message = (String) super.getTopic().getUpdate(this);
		if (message == null) {
			System.out.println(super.getDeviceName() + ":: No new message");
		} else {
			System.out.println(super.getDeviceName() + ":: Consuming message from Laptop::" + message);

			// Message massageToSend = new Message(HommyUtil.DEVICE_TOKEN);
			// massageToSend.add("message", message);
			// boolean isSend = HTTPUtil.sendMessage(massageToSend);
			// System.out.println("IS SEND? " + isSend);
		}
	}

	public static void connectToLaptop() {
		while (true) {
			try {
				System.out.println("Waiting for client on port " + serverSocket.getLocalPort() + "...");
				server = serverSocket.accept();

				System.out.println("Just connected to " + server.getRemoteSocketAddress());
				// DataInputStream in = new
				// DataInputStream(server.getInputStream());
				//
				// System.out.println(in.readUTF());
				// DataOutputStream out = new
				// DataOutputStream(server.getOutputStream());
				// out.writeUTF("Thank you for connecting to " +
				// server.getLocalSocketAddress() + "\nGoodbye!");
				// server.close();

				sendMessage("");
			} catch (SocketTimeoutException s) {
				System.out.println("Socket timed out!");
				break;
			} catch (IOException e) {
				e.printStackTrace();
				break;
			}
		}
	}

	private static void sendMessage(String message) {
		DataOutputStream out;
		try {
			out = new DataOutputStream(server.getOutputStream());
			out.writeUTF("Thank you for connecting to " + server.getLocalSocketAddress() + "\nGoodbye!");
			out.flush();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}
}
