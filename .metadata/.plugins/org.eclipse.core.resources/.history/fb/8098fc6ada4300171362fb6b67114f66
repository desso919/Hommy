package com.hommy.service;

import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class PublicationDispatcher {

	private static Timer executor;
	private static boolean isStarted;

	public static void start() {
		if (!isStarted) {
			System.out.println("Starting publication dispatcher.");
			executor = new Timer();
			TimerTask task = new ProcessPublicationQueue();

			ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);
			executor.scheduleAtFixedRate(helloRunnable, 0, 3, TimeUnit.SECONDS);

			executor.schedule(task, 0, 5000);
			isStarted = true;
		} else {
			System.out.println("Publication dispatcher is already started.");
		}
	}

	public static void stop() {
		if (isStarted) {
			executor.cancel();
			isStarted = false;
		} else {
			System.out.println("Publication dispatcher is already stoped.");
		}

	}

	public static boolean isStarted() {
		return isStarted;
	}

}
