package com.hommy.service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ConnectException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.net.UnknownHostException;

public class ObserverPatternTest {

	public static void main(String[] args) throws UnknownHostException, IOException {
		// // create subject
		// ITopic tempTopic = TemperatureTopic.getInstance();
		// ITopic timeTopic = TimeTopic.getInstance();
		//
		// // create observers
		// IDeviceSubscriber airConditioner = new AirConditioner("Air
		// Conditioner");
		// IDeviceSubscriber tv = new TV("TV");
		// IDeviceSubscriber alarmClock = new AlarmClock("Alarm Clock");
		//
		// // register observers to the subject
		// tempTopic.register(airConditioner);
		//
		// timeTopic.register(tv);
		// timeTopic.register(alarmClock);
		//
		// // attach observer to subject
		// airConditioner.setTopic(tempTopic);
		// alarmClock.setTopic(timeTopic);
		// tv.setTopic(timeTopic);
		//
		// // now send message to subject
		// tempTopic.publishMessage("Temperature changed to: 24C");
		// timeTopic.publishMessage("Time now is 11:00 AM");

		// checkHosts("192.168.0");
		test();
	}

	public static void checkHosts(String subnet) throws UnknownHostException, IOException {
		int timeout = 0;
		for (int i = 1; i < 255; i++) {
			String host = subnet + "." + i;
			System.out.println("Full IP: " + host);
			InetAddress[] ip = InetAddress.getAllByName(host);

			System.out.println("");
			// if (ip.isReachable(timeout)) {
			// System.out.println(ip + " is reachable");
			// } else {
			// System.out.println(ip + " is not reachable");
			// }

		}
	}

	public static void test() {
		Socket socket = new Socket();

		try {
			Process process = Runtime.getRuntime().exec("arp -i en0 -a -n");
			process.waitFor();
			BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));

			while (reader.ready()) {
				String ip = reader.readLine();
				ip = ip.substring(3, ip.indexOf(')'));

				try {
					socket.connect(new InetSocketAddress(ip, 1234), 1000);
					System.out.println("Found: " + ip);
				} catch (ConnectException | SocketTimeoutException ignored) {

				}
			}

			if (socket == null) {
				System.err.println("Could not find socket.");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static String getSubnet(String currentIP) {
		int firstSeparator = currentIP.lastIndexOf("/");
		int lastSeparator = currentIP.lastIndexOf(".");
		return currentIP.substring(firstSeparator + 1, lastSeparator + 1);
	}

}
